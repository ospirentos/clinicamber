services:
  amber-cms-app:
    container_name: amber-cms
    build:
      context: amber-cms
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: amber-cmsDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./amber-cms/config:/opt/app/config
      - ./amber-cms/src:/opt/app/src
      - ./amber-cms/package.json:/opt/package.json
      - ./amber-cms/package-lock.json:/opt/package-lock.json

      - ./.env:/opt/app/.env
      - ./amber-cms/public/:/opt/app/public/
    ports:
      - "1337:1337"
    networks:
      - amber-cms
    depends_on:
      - amber-cmsDB

  amber-cmsDB:
    container_name: amber-cmsDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - amber-cms-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - "5432:5432"
    networks:
      - amber-cms

  amber-cmsAdminer:
    container_name: amber-cmsAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - "9090:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=amber-cmsDB
    networks:
      - amber-cms
    depends_on:
      - amber-cmsDB

  reverse-proxy:
    container_name: nginx-reverse-proxy
    build:
      context: nginx
      dockerfile: ./Dockerfile
    networks:
      - amber-cms
    ports:
      - 80:80
  web-app:
    container_name: amber-web-app
    build:
      context: amber-web-app
    ports:
      - "5173:5173"
    networks:
      - amber-cms
    env_file: .env
    environment:
      - WEB_CMS_BASE_URL=${WEB_CMS_BASE_URL}
      - API_URL=${WEB_API_URL}
      - PUBLIC_WEB_TOKEN=${WEB_PUBLIC_TOKEN}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_API_KEY_SSR=${GOOGLE_API_KEY_SSR}
      - GOOGLE_PLACE_ID=${GOOGLE_PLACE_ID}
      - NODE_ENV=development
      - PORT=3000
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=127.0.0.1
      - WDS_SOCKET_PORT=3000
      - MAIL_SENDER_URL=${MAIL_SENDER_URL}
    volumes:
      - ./amber-web-app:/app
      - /app/node_modules
  mail-sender:
    container_name: amber-mail-sender
    build:
      context: amber-mail-service
    ports:
      - "1338:1338"
    networks:
      - amber-cms
    env_file: .env
    environment:
      - MAIL_SENDER_USERNAME=${MAIL_SENDER_USERNAME}
      - MAIL_SENDER_PASSWORD=${MAIL_SENDER_PASSWORD}
      - MAIL_SENDER_HOST=${MAIL_SENDER_HOST}
      - MAIL_SENDER_PORT=${MAIL_SENDER_PORT}
    volumes:
      - ./amber-mail-service:/app
      - /app/node_modules
volumes:
  amber-cms-data:
  static-web-files:
networks:
  amber-cms:
    name: Amber-cms
    driver: bridge
